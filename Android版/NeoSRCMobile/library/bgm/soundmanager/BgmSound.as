package bgm.soundmanager {	import flash.events.Event;	import flash.media.Sound;			/**************************************************************	 *	 * BgmSound	 * （※BGMの特性は「loop有り、重ね再生不可」です）	 * 	 *************************************************************/	public class BgmSound extends BaseSound{						//--------------------------------------------------------------------------		// コンストラクタ		//-------------------------------------------------------------------------- 		public function BgmSound( sound:Sound, soundId:String, isMute:Boolean, loop:Boolean ) {						super( sound, soundId, isMute, loop, "BGM" );		}						//--------------------------------------------------------------------------		// 再生		//--------------------------------------------------------------------------		public override function play( volumeValue:Number, panValue:Number, fadeTime:Number ):void{						// [0]多重再生防止			if ( isPlaying )		return;						// [1]再生を実行			isPlaying = true;			if ( loop ) {				_channel = _sound.play(0, int.MAX_VALUE);			}else {				_channel = _sound.play(0);				_channel.addEventListener(Event.SOUND_COMPLETE, function():void {					isPlaying = false;				});			}			volume = _tempVolume = volumeValue;						// [2]ミュート時は音量0で再生状態のまま処理終了			if ( isMute ) {				volume = 0;				return;			}						// [3]音量トゥイーン。フェードインする場合はいったんvolumeを0に。			if ( 0 < fadeTime ) 	volume = 0;			TweenEngine.tweenVolume( _channel, _tempVolume, fadeTime );						// [4]パンは即反映			setPan( panValue, 0);		}						//--------------------------------------------------------------------------		// 停止		//--------------------------------------------------------------------------		public override function stop():void{						// 再生されていなかったら無効			if ( ! isPlaying )	return;						isPlaying = false;			_channel.stop();		}									}}